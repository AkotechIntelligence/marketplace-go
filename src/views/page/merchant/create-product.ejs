<div class="account-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="account-title">Create Product</h1>
            <p class="account-subtitle">Add a new product to your shop</p>
        </div>
    </div>
</div>

<div class="account-card">
    <form id="createProductForm" onsubmit="handleSubmit(event)">
        <div class="form-group">
            <label for="merchantShopUuid">Shop</label>
            <select class="form-control" id="merchantShopUuid" name="merchantShopUuid" required>
                <option value="">Select a shop</option>
                <% shops.forEach(shop => { %>
                    <option value="<%= shop.uuid %>" data-zone="<%= shop.zoneUuid %>">
                        <%= shop.shopName %>
                    </option>
                <% }); %>
            </select>
        </div>

        <div class="form-group">
            <label for="name">Product Name</label>
            <input type="text" class="form-control" id="name" name="name" required>
        </div>

        <div class="form-group">
            <label for="description">Description</label>
            <textarea class="form-control" id="description" name="description" rows="3" required></textarea>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="price">Price</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text">$</span>
                        </div>
                        <input type="number" class="form-control" id="price" name="price" step="0.01" required>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="quantity">Quantity</label>
                    <input type="number" class="form-control" id="quantity" name="quantity" required>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="categoryUuid">Category</label>
                    <select class="form-control" id="categoryUuid" name="categoryUuid" required>
                        <option value="">Select a category</option>
                        <% categories.forEach(category => { %>
                            <option value="<%= category.uuid %>"><%= category.name %></option>
                        <% }); %>
                    </select>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="subCategoryUuid">Sub Category</label>
                    <select class="form-control" id="subCategoryUuid" name="subCategoryUuid" required disabled>
                        <option value="">Select a category first</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="form-group">
            <label>Product Images</label>
            <div class="custom-file">
                <input type="file" class="custom-file-input" id="files" name="files" multiple accept="image/*" required>
                <label class="custom-file-label" for="files">Choose files</label>
            </div>
            <div id="imagePreview" class="mt-3 d-flex flex-wrap"></div>
        </div>

        <div class="form-group mt-4">
            <button type="submit" class="btn btn-primary">Create Product</button>
            <a href="/merchant/products" class="btn btn-outline-secondary ml-2">Cancel</a>
        </div>
    </form>
</div>

<script>
// Handle file input change
document.getElementById('files').addEventListener('change', function(e) {
    const preview = document.getElementById('imagePreview');
    preview.innerHTML = '';
    
    Array.from(e.target.files).forEach(file => {
        const reader = new FileReader();
        reader.onload = function(event) {
            const div = document.createElement('div');
            div.className = 'm-2';
            div.innerHTML = `
                <img src="${event.target.result}" 
                     style="width: 100px; height: 100px; object-fit: cover;" 
                     class="rounded">
            `;
            preview.appendChild(div);
        }
        reader.readAsDataURL(file);
    });

    // Update file input label
    const fileCount = e.target.files.length;
    const label = this.nextElementSibling;
    label.textContent = fileCount > 1 ? `${fileCount} files selected` : e.target.files[0].name;
});

// Handle category change
document.getElementById('categoryUuid').addEventListener('change', async function(e) {
    const categoryId = e.target.value;
    const subCategorySelect = document.getElementById('subCategoryUuid');
    
    if (!categoryId) {
        subCategorySelect.disabled = true;
        subCategorySelect.innerHTML = '<option value="">Select a category first</option>';
        return;
    }

    try {
        const response = await fetch(`/api/productsubcategory/product/${categoryId}`);
        const data = await response.json();
        
        subCategorySelect.innerHTML = '<option value="">Select a sub category</option>';
        data.data.forEach(subCat => {
            subCategorySelect.innerHTML += `
                <option value="${subCat.uuid}">${subCat.name}</option>
            `;
        });
        subCategorySelect.disabled = false;
    } catch (error) {
        console.error('Error fetching subcategories:', error);
        alert('Error loading subcategories');
    }
});

// Handle form submission
async function handleSubmit(event) {
    event.preventDefault();
    
    const formData = new FormData(event.target);
    const files = document.getElementById('files').files;
    Array.from(files).forEach(file => {
        formData.append('files', file);
    });

    try {
        const response = await fetch('/merchant/products/create', {
            method: 'POST',
            body: formData
        });

        const data = await response.json();
        
        if (data.status === 'success') {
            window.location.href = '/merchant/products';
        } else {
            alert(data.message || 'Error creating product');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('Error creating product');
    }
}
</script>